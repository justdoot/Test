step 1: create a docker network ..
docker network create mynetwork

step 2: creating a mysql container 
docker run -d --name mysql-container --network mynetwork -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cdac mysql:latest

step 3: creating a database and tables in container
docker exec -it mysql-container bash
mysql -u root -p
# Enter password (root)

# Inside MySQL shell
CREATE DATABASE cdac;
USE cdac;
CREATE TABLE student_tbl (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), age INT);
INSERT INTO student_tbl (name, age) VALUES ('John Doe', 25), ('Jane Doe', 22), ('Bob Smith', 28);

step 4: create a directory and Dockerfile
// code
# Use the official Tomcat image as the base image
FROM tomcat:latest

# Download and copy the MySQL JDBC driver to Tomcat's lib directory
RUN mkdir -p /usr/local/tomcat/lib && \
    curl -o /usr/local/tomcat/lib/mysql-connector-java-8.0.26.jar https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.26/mysql-connector-java-8.0.26.jar

# Copy the JSP file to the webapps directory
COPY ./webapp /usr/local/tomcat/webapps/ROOT

step 5:
<%@ page import="java.sql.*" %>
<%@ page import="java.io.*" %>
<%@ page import="java.util.*" %>

<html>
<head>
    <title>Student Records</title>
</head>
<body>

<%
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;

    try {
        // JDBC driver name and database URL
        String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
        String DB_URL = "jdbc:mysql://mysql-container:3306/cdac";

        // Database credentials
        String USER = "root";
        String PASS = "root";

        // Register JDBC driver
        Class.forName(JDBC_DRIVER);

        // Open a connection
        conn = DriverManager.getConnection(DB_URL, USER, PASS);

        // Execute a query
        stmt = conn.createStatement();
        String sql;
        sql = "SELECT * FROM student_tbl";
        rs = stmt.executeQuery(sql);

        // Display the data
        out.println("<h2>Student Records</h2>");
        out.println("<table border='1'>");
        out.println("<tr><th>ID</th><th>Name</th><th>Age</th></tr>");

        while (rs.next()) {
            out.println("<tr>");
            out.println("<td>" + rs.getInt("id") + "</td>");
            out.println("<td>" + rs.getString("name") + "</td>");
            out.println("<td>" + rs.getInt("age") + "</td>");
            out.println("</tr>");
        }

        out.println("</table>");

    } catch (SQLException se) {
        se.printStackTrace();
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }
%>

</body>
</html>


step 6: create a tomcat container and run
docker build -t my-tomcat .
docker run -d --name tomcat-container --network mynetwork -p 8080:8080 my-tomcat

step 7: Navigate to http://localhost:8080/index.jsp.

debugging :
docker ps
docker logs tomcat-container




